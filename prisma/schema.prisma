// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String?   @unique
  password  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // Relaci贸n con los viajes
  trips     Trip[]
}


model User_Pasajero {
  id_pasajero        Int      @id @default(autoincrement())
  email     String   @unique
  username  String?   @unique
  password  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // Relaci贸n con los viajes
  trips     Trip[]
}

model User_Conductor {
  id_conductor        Int      @id @default(autoincrement())
  email     String   @unique
  username  String?   @unique
  password  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 // Relaci贸n con los viajes
  trips     Trip[]
}


model Trip {
  id          Int      @id @default(autoincrement())
  destination String
  capacity    Int
  costPerPerson Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaci贸n con el usuario conductor
  id_conductor Int
  conductor    User_Conductor     @relation(fields: [driverId], references: [id])
}