// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Reemplaza con tu conexión a la base de datos
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(PASSENGER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  // Relaciones con los viajes
  tripsAsConductor Trip[] @relation("ConductorTrips")
  tripsAsPassenger TripOnPassenger[]
}

model Trip {
  id            Int                 @id @default(autoincrement())
  destination   String
  capacity      Int
  costPerPerson Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relación con el conductor (un viaje tiene un conductor)
  conductor   User @relation("ConductorTrips", fields: [conductorId], references: [id])
  conductorId Int

  // Relación con pasajeros (muchos pasajeros por viaje)
  passengers TripOnPassenger[]
}

model TripOnPassenger {
  id      Int   @id @default(autoincrement())
  tripId  Int
  userId  Int
  createdAt DateTime @default(now())

  // Relaciones
  trip Trip @relation(fields: [tripId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

enum Role {
  PASSENGER
  DRIVER
}
